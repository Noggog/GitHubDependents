name: Publish

on:
  workflow_dispatch:
    input:
      version:
        description: 'Current Version'
        required: true
      body:
        description: 'Release info'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: GitHubDependents/**/*.nupkg
        if-no-files-found: error
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
  publish:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Download build artifact
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: dist
    - name: Create a GitHub Release
      uses: actions/create-release@v1
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: ${{ github.ref }}
        # The name of the release. For example, `Release v1.0.1`
        release_name: ${{ github.event.inputs.version }}
        # Text describing the contents of the tag.
        body: ${{ github.event.inputs.body }}
        # Path to file with information about the tag.
        # body_path: # optional
        # `true` to create a draft (unpublished) release, `false` to create a published one. Default: `false`
        draft: true
        # `true` to identify the release as a prerelease. `false` to identify the release as a full release. Default: `false`
        # prerelease: # optional
        # Any branch or commit SHA the Git tag is created from, unused if the Git tag already exists. Default: SHA of current commit
        # commitish: # optional
    - name: Nuget push
      run: dotnet nuget push dist/*.nupkg -k ${{ secrets.NUGETKEY }} --skip-duplicate
      
    
